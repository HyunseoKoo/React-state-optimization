memoization ?
    동일한 값을 리턴하는 함수를 반복적으로 사용해야할 때 맨처음 값을 계산할 때 해당 값을
    메모리에 저장해서 필요할 때마다 또다시 계산하지 않고 메모리에서 꺼내서 재사용하는 기법.
    자주 필요한 값을 맨처음 계산할 때 캐싱해둬서 그 값이 필요할 때마다 메모리에서 꺼내 쓰는 것!

함수형 컴포넌트 렌더링 ? 그 함수가 호출된다는 것! 호출될 때마다 함수 안에 있는 변수들이 모두 초기화 됨.
함수 연산이 무거운 경우 state 혹은 props로 인해 리랜더링 될 때마다 반복해서 계산되는건 비효율적.
이를 useMemo가 해결해줄 수 있음!

function Component() {
    // 콜백함수
    const value = useMemo(
        () => deep calculate(),[의존배열]
    );
    return <div>{value}</div>
}

[ 동작 원리 ]
렌더링 -> component 함수 호출, memoization -> 렌더링 -> component 함수 호출, memoize 된 값을 재사용

*** 무분별하게 사용할 경우
메모리 낭비로 성능 악화 가능!